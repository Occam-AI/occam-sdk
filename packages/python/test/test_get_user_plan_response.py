# coding: utf-8

"""
    Occam AI's public API

    API exposing Occam AI's planning, execution and supervision capabilities.

    The version of the OpenAPI document: 6.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from occam_sdk.models.get_user_plan_response import GetUserPlanResponse

class TestGetUserPlanResponse(unittest.TestCase):
    """GetUserPlanResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetUserPlanResponse:
        """Test GetUserPlanResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetUserPlanResponse`
        """
        model = GetUserPlanResponse()
        if include_optional:
            return GetUserPlanResponse(
                id = '',
                name = '',
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                category = '',
                run_metrics = occam_sdk.models.run_metrics.RunMetrics(
                    duration_minutes = 1.337, 
                    cost_dollars = 1.337, 
                    success_rate = 1.337, 
                    metrics_are_estimates = True, ),
                status = '',
                run_status = '',
                organization = occam_sdk.models.get_organization_response.GetOrganizationResponse(
                    name = '', )
            )
        else:
            return GetUserPlanResponse(
                id = '',
                name = '',
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                category = '',
                run_metrics = occam_sdk.models.run_metrics.RunMetrics(
                    duration_minutes = 1.337, 
                    cost_dollars = 1.337, 
                    success_rate = 1.337, 
                    metrics_are_estimates = True, ),
                status = '',
                run_status = '',
                organization = occam_sdk.models.get_organization_response.GetOrganizationResponse(
                    name = '', ),
        )
        """

    def testGetUserPlanResponse(self):
        """Test GetUserPlanResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
