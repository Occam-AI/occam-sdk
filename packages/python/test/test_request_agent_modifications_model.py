# coding: utf-8

"""
    Occam AI's public API

    API exposing Occam AI's planning, execution and supervision capabilities.

    The version of the OpenAPI document: 6.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from occam_sdk.models.request_agent_modifications_model import RequestAgentModificationsModel

class TestRequestAgentModificationsModel(unittest.TestCase):
    """RequestAgentModificationsModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestAgentModificationsModel:
        """Test RequestAgentModificationsModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestAgentModificationsModel`
        """
        model = RequestAgentModificationsModel()
        if include_optional:
            return RequestAgentModificationsModel(
                modifications_batch = occam_sdk.models.modifications_batch.ModificationsBatch(
                    modifications = [
                        null
                        ], 
                    modifier_id = 56, 
                    modifier_type = 'agent', ),
                user_message = occam_sdk.models.user_message_model.UserMessageModel(
                    text = '', 
                    nodes = [
                        56
                        ], 
                    field_mappings = [
                        occam_sdk.models.plan_field_mapping.PlanFieldMapping(
                            src_type = 'ToolPlanNode', 
                            src = 56, 
                            target = 56, 
                            src_output_field = '', 
                            target_input_field = '', 
                            plan_id = '', 
                            type = null, )
                        ], )
            )
        else:
            return RequestAgentModificationsModel(
        )
        """

    def testRequestAgentModificationsModel(self):
        """Test RequestAgentModificationsModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
