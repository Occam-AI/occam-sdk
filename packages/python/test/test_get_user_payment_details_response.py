# coding: utf-8

"""
    Occam AI's public API

    API exposing Occam AI's planning, execution and supervision capabilities.

    The version of the OpenAPI document: 6.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from occam_sdk.models.get_user_payment_details_response import GetUserPaymentDetailsResponse

class TestGetUserPaymentDetailsResponse(unittest.TestCase):
    """GetUserPaymentDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetUserPaymentDetailsResponse:
        """Test GetUserPaymentDetailsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetUserPaymentDetailsResponse`
        """
        model = GetUserPaymentDetailsResponse()
        if include_optional:
            return GetUserPaymentDetailsResponse(
                total_transactions = 56,
                successful_transactions = 56,
                failed_transactions = 56,
                last_transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_transaction_was_successful = True,
                topup_suggested_amount = 56,
                default_payment_method_configured = True,
                auto_recharge_active = True,
                auto_recharge_threshold_amount = 56,
                auto_recharge_bring_balance_up_to_amount = 56,
                available_balance = 56,
                used_balance = 56,
                available_credits = 56,
                used_credits = 56,
                free_credits_announcement_active = True,
                auto_recharge_failed_announcement_active = True
            )
        else:
            return GetUserPaymentDetailsResponse(
                total_transactions = 56,
                successful_transactions = 56,
                failed_transactions = 56,
                default_payment_method_configured = True,
                auto_recharge_active = True,
        )
        """

    def testGetUserPaymentDetailsResponse(self):
        """Test GetUserPaymentDetailsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
